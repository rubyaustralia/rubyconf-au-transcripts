Hi, I'm Joss.  This isn't a talk about actually becoming a better developer.  This is only a talk about feeling like a better developer.  I don't know, I was just going to tell everyone to use Vim.  So we have got about 19 minutes for questions... no.  This is a talk about feeling like a better developer.  My hope is that in 20 minutes some of you will feel like better developers and feel happier and more confident for it.  So these two things, feeling better and actually being better.  You would like to hope there is this sort of nice linear X equals Y relationship between the two, right? As I have illustrated in this sophisticated data here, as you become a better developer you feel like a bloody better developer, right? But us poor mortal humans are subject
to cognitive biases which make us terrible at everything and particularly stuff about ourselves, appealing to data and evidence rather than emotion can help but in a catch 22 we are also great at convincing ourselves we are the exception to the rule.  I am undoubtedly the single one in this huge set of data.  We are bad at that.  We are bad at judging our ability.  You will have people all over the place on this chart.  I think the IE6 core team was stuck up here.  Then the new Vim
user.  Then the path I took, which I think is relatively common.  So you start down here with no idea which way is up or down.  Things start to make sense and you build things on your own and then you start to think you are pretty good at it.  Have you heard of the Dunning Kruger effect? You feel how much better you are because you don't know how much you don't know.  I built a simulator in Java at uni and thought I was the next John Karnak.  You will get involved in a real project, take your first job, meet seniors and realise you are not as good as you thought you were. From this point on, the more you learn the more you realise you need to learn.  The more you know, the more you realise you don't know.  So you are no longer ignorant and it is no longer bliss and it is very easy to get caught in a trap of doubting your own ability and feeling you are constantly struggling on this never-ending treadmill of trying to learn all the things.  I have been doing software almost 10 years and I have never had what I would call a normal job.  I have worked for my own dad, I have worked as a freelancer and worked as the only full-time
developer of BBL Digital, a small agency that I am a part owner.  Because of that I have had no point of reference for judging my ability.  I have been constantly worried I might be doing
everything wrong without anyone else there to make me realise it and it was only a matter of
time before someone else figured this out.  Each time I would start a more challenging job I would think, this will be the one where I totally screw up and everyone realises I have just basically fluked it so far.  Meanwhile, I also believe that surely all the stuff that all other programmers were doing was far more complex than anything I was doing.  Turns out what I was experiencing was a pretty common thing.  It is called impostor syndrome.  When I first kind of diagnosed myself with this, I went to my wife and I said, "Jess, have you heard of impostor syndrome? It is where you don't internalise your own accomplishments despite external
evidence.  You dismiss it as luck or fluke even though other people think you are more than content.  It makes you feel sooner or later someone will catch you out for being an impostor, for being better than you actually are".  And Jess said, "You mean like you?" "Yeah, I think".  I read a great blog post by Alicia Lu, I will shamelessly copy it here.  This is impostor syndrome, the small circle is what you think you know.  The larger one is what you think everyone else knows. This is closer to reality.  You know some stuff, another person knows some stuff, some of it overlaps, some doesn't.  But I have thought a lot how this first situation comes about and I think
it goes something like this.  You start sort of building up a picture in your head of the stuff other people know and do, so you know, Bobby knows angular, Peggy Sue, Jane maintains this gem,
Sam contributes to that one, Kabistrano, rust, open course, conference talks, mentoring, blogging, agile, all the things... and you build up a somewhat realistic bubble in your head of the
stuff people collectively know and do.  But then you make two small mistakes.  Number one, you blur the edges.  You tend to assume that most people know most of this stuff.  So it means you
overestimate the horizontal breadth of everyone's knowledge.  Number two, you tend to assume that if someone mentions something, they're probably an expert at it.  So you tend to
overestimate the vertical depth of everyone's knowledge.  To give you an embarrassing example I

saw an embarrassing Tweet that says... I thought he knows everything, he has dealt with them at work and knows how to mitigate them and I guess most devs know that stuff but not me.  It is the serial thought process of a self-doubter.  From this one tweet I assume everyone is an expert on the topic.  When you think like this, all of a sudden you suck.  All of a sudden you know nothing about anything.  Or at least, so you think.  This is impostor syndrome.  It is common.  Estimates vary, but some studies suggest as many as 70 per cent of people will experience this at some point. The smallest estimate I found put it at 40 per cent, which is huge.  Needless to say, if you haven't experienced it yourself some of your friends have.  It was described in 1978 by two researchers in the Georgia in the US.  Given the patriarchal society, it is common among women and minority groups.  Those who set the bar high on the other hand are also more likely to feel like they are falling short of where they should be.  I was shocked to find out just how many highly respected and highly accomplished figures in the tech industry had experienced this. People like Facebook CTO Cheryl, Ram.  Another said he feels like an impostor because he
ships videos about code not actually code features.  The rest of us thought he was awesome for the same reason.  Guys like DHH... not really.  I am pretty sure DHH doesn't have it.  But seniors and leaders aren't by any means immune to this.  Nor are intermediates and juniors and
apparently nor am I.  I wanted to talk about why it is particularly common in tech but didn't have time, so it is.  You can ask me about that later.  So you know what impostor syndrome is, but
why should you care about it.  Even if you don't have it, why should you try to stop other people feeling this way? Happiness is kind of the point of life and feeling confident is a lot more fun
than its counterpart.  Two, confidence and doubt can be self-fulfilling prophecies.  Doubters love
their own comfort zone and may avoid taking on opportunities and challenges to further their own professional development and you don't want it happening to yourself, your friends or
employees.  It hurts recruiters and those hiring too.  In an industry hungry for talent, good
candidates can be missed if they underestimate their own ability.  I remember one job interview, my main agenda was to make sure they didn't know I was that good.  I am pretty sure it is a bad interview strategy.  I might have missed an opportunity but they did too.  They were hiring because they were hurting.  And looking back, I would have been fine for the role.  So how did I come to realise that I am might have this impostor syndrome thing? How did I, to some extent, overcome it? Over time there were a bunch of little experiences that made me suspect two things.
1, I might not be as bad as I thought.  2, others might doubt themselves too.  For example, Lachlan Hardy's Twitter use used to say you are the only one who thinks you are not good enough.  I thought surely he is not talking directly to me.  Another time Michael Lindsar said he
was impressed with something of mine and my train of thought was, "Is he impressed? I think he
was.  Simply, Michael, he has overestimated how complex it was.  But he is one of the best Ruby devs, did I mislead him?" So the doubt is there but it is doubting itself.  Experiences like that, bit
by bit, made a small difference.  But then I had an epiphany.  I was thinking, this person actually
knows what they are talking about, wish I could be like that, but guess I never will be.  I got to the end and it was written by me.  I wrote it a year ago.  That sort of hit me between the eyeballs as hard evidence the standard I was using to judge others was different to the standard I was using to judge myself.  It led to me really looking into this whole self doubt thing and realise I might have impostor syndrome.  Since then I have thought and read about it a lot and tried to
make a conscious effort to overcome it.  So let's fix it.  I am going to share six things that I found useful.  If you have got impostor syndrome, every single one will go against your natural
inclination.  Tough luck, you've got to try it anyway.  Quick disclaimer, I am no psychologist or expert, I am just someone who doubts themselves less than they used to.  Here is what helped
me.  Number 1, talk about it.  Speak to others who have experienced it.  If you are not confident, Google it and read about the experience of others.  When I fist realised that lots of people
experience self-doubt, it was like sunshine to my heart, such a relief.  Finding out you are not the only one is the single biggest step to overcome it.  2, teach.  It is amazing and a whole lot of talk
in itself but specifically for doubters it inadvertently shifts the focus from what you don't know to what you do know.  What you do know may surprise you.  A funny side effect, I thought teaching
would be easy.  It is not going to take long to transfer this thimbleful of knowledge in my head to someone else, it wasn't the case.  Teaching made me realise I had accumulated more knowledge that I thought.  3.  Opine.  Have opinions.  You will be terrified of this, you will feel you are not
qualified to have an opinion on anything.  You are wrong.  Make a conscious decision to back your intuition and have an opinion.  You might change it later and that is fine.  You might debate
someone and lose.  That's fine too.  It won't ruin your career.  You will learn more and gain more confidence by taking a stand than you ever will by sort of sitting on the sidelines and asking
everyone else what should I think? 4.  Don't undervalue your soft skills.  In our industry, it can be easy to evaluate yourself and others on technical skills.  I remember trying to explain to someone
they were wrong, they shouldn't prefer working with me, but they insisted.  No, you do a

thorough job and don't whinge about little changes and test the stuff before you hand it back. They valued soft skills, clear communication, not being a jerk as much as technical knowledge.
5.  Work with people who think you are better than you do.  That will be everyone, just work with others.  Honestly, I don't think that freelancing is a good choice for a self-doubter.  The
most challenging projects I have taken on and the things I have learned the most from are things I
would have turned down due to lack of confidence.  But luckily my colleagues had more confidence and made sure my own doubt didn't become a self-fulfilling prophecy.  6.  This is
important.  Be conscious of work/life balance.  If you are constantly worried you are not as good
as you should be, you will likely overworking to compensate.  You will go to bed later and later and get a bit done on weekends too.  When you are not working you will read editorials or read
blog posts.  It can start to consume your whole life.  Don't do this, it doesn't help.  It will make
you hate your work and life.  Becoming a better developer is great.  Impostor syndrome is not a lack of ability.  It is an incorrect judgment of ability.  So be conscious of balance and set hard limits if you need to.  For example, I don't know, Thursday to Sunday, no computer after 8p.m. or whatever works for you but just make sure the balance is there.  So those six tips are not exhaustive but they are what we have got time for now.  At this point you might be wondering am I cured? Am I over it? I am sorry to give an unsatisfying response but the answer is naaah, maybe 50, 60 per cent.  I still have relapses, if you want to call them that.  But it is ongoing and generally an upward trend and I am happier for it.  I feel it is an ongoing battle between the rational and the emotional sides of your mind.  As you make a conscience decision to overcome it, the rational side will get better at (a), sort of staging an intervention earlier when self-doubt looms, and (b), sort of winning the arguments your emotional mind puts forth.  If any of the experiences I have shared resonate with you, if you are now thinking I am not as bad as I thought, congratulations, you have taken a massive first step.  I want you right now to make a commitment to do something about it.  It won't be easy or quick.  It will take self-discipline.  It
will be gradual and you will have downs as well as ups.  It will take an ongoing conscious effort. But you absolutely can do it and it absolutely is worth it.  You will be a happier developer and a
happier person.  Thank you.
