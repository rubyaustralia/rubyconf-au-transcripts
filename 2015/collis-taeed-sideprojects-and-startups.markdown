I am here to talk about side projects and in relation to startups.  When Sebastian and the team asked me to speak here at RubyCon my first thing was "you do know I don't know any Ruby?"  Apparently it is okay to come and address you guys because I know PHP.  I'm kidding, I don't even know PHP.  I thought I need to have slides to establish credibility so I'm the CEO and cofounder of Envato.  We have 3 million visitors every month to our sites
and 250 people working there, including many Ruby devotees who are here, who I will try not to embarrass.  It is like when your mum turns up at school.  Maybe I'll be the cool mum.  We have
250 people, we paid out a quarter of a billion to our community and we are bootstrapped, which is cool but nothing to do with what I am here to talk to you about today because it is not the part of startups when they get successful but more how you get to a startup, the stuff you can do on
your travels to a startup.  In my experience, startups are hard.  It is like they are not easy things. They are kind of glamorous these days, the social network and that poor HBO show, but side
projects are difficult, startups are difficult.  I have been running a startup for almost 10 years and
it has been easily the hardest thing I have worked on, like a massive learning curve upwards.  But side projects on the other hand are a little easier, the incline is a little less.  The startup is high
risk, you have put lots of savings in and quit your job and put somebody else's savings in, high
pressure, it is high reward but high pressure and it is a bit of a marathon.  But a side project is low risk, no-one really cares, you haven't put lot of your energy and time into it and hopefully it is low pressure and low risk and generally speaking a labour of love.  But where the two things
meet, for me side projects are a great way to train towards a startup.  So it is like the startup gym, if you like, is side projects.  Not that all side projects lead to this but if you're interested in getting
into startups, for me side projects are a great place to start and it is because they share a lot of the
same sorts of things.  The reason it is important to train up, let's say after this talk and at the coffee break and I walk up to you and say, "Hey, I'm Collis, I don't know any Ruby but I want to
be a developer." And you say that is cool and are you going to do a code academy course?" And I
say, "No, I've decided to jump into a project and I'm going to build an air traffic control system and decided to put real planes with real people and like, I'm an entrepreneur and we do that crazy stuff and make real people fly through it and I'll learn everything from the ground up on the way, don't worry, it will be cool.  Also, by the way, if it doesn't go well, I will take it to mean I shouldn't be a developer.  I will take this as a, like, personal failure I shouldn't be a developer". And you are, like, "Dude, you're an idiot, a dashing good looking idiot but an idiot. " It is the same with start-ups.  But I've met so many people who go "I am going to jump into a huge
startup and put my savings in and if it doesn't work out", I have met people on the other side who are, "I guess I'm not cutout for startups." It is not true.  Work into it, don't walk into the gym and
do heavy weights, start with dumbbells.  It is how I workout.  Here is a list.  You have to figure out what is the idea behind the startup, you have to collaborate with people, launch it, probably
market it, monetise and get capital but these are the pieces of a startup.  Most of you are Rubyists and you are probably classically in these two fields, you are making stuff, collaborating but
probably you are not busy coming up with business ideas or raising capital.  So it makes sense that these are some things you need to practice.  You don't just know these things.  Nobody pops
out at birth with a monetisation skillset, it doesn't happen.  The stuff you do in the side project is

things that will get you on your path towards a startup.  You might be really comfortable with two, you start doing side projects and have some attempts to come up with ideas and try out different things, launch the things and see them through, but importantly you don't need to do lots of marketing and you don't need to raise capital and there is lots of things from a startup you
don't need to do.  Somewhere in between, the more side projects you do the more you can practice the skillsets.  So maybe on the first you don't do much and a little later you start doing a few more of those bits.  Here is a couple of people who do side projects.  Some guy you have never heard of, great dress sense.  Nobody gave me the memo.  Through a rails rumble, I think a few of the other devs who are here worked on it and it got sold.  It was meant to be a little project, Keith with Mario worked on desk topper and gift topper.  I emailed Keith to ask him about the side projects and he was like 30,000 users, marketing, drops mic, and email form.  It was a great example of a side project where he got to experiment with how to spread stuff and get it out there without a lot of risk and pressure.  A startup that doesn't need millions but a cool side project.  He started working at Envato he constantly talks about it in his intro, a cool set of tools we use already.  It is a great example of a side project that has become a thing.  He has got a cofounder, probably in Keith's case he was thinking it might turn out that way and many startups were side projects, so uber, Stumble Upon, GitHub, but I don't think you should think about side projects as I am going to make something that will become something, do it knowing
it could turn into something, but don't put that pressure on you, just know it does happen.  I asked Keith if he had advice for the RubyCon crowd on side projects and he was yes, don't try to ship a new technology and - learn a new technology and ship it at the same time.  It is great advice.  I
am a designer and we have the same afflictions as developers.  Many of my early side projects were "I'm going to do that thing that clients won't let me do and play with the new shiny toy".  It
is perfect, it is just a different type of side projects.  You want to know your true north and what
it is to get out of it.  If it is to learn new technology or experiment with a new design, that's cool. Do it for that reason.  If you want to get better finishing things or doing startups, that's also cool. If you doing it for that reason, probably bug standard rails instead of a cutting edge framework is fine.  Be clear what is your true north because it will help you make decisions along the way. Another interesting person who does side projects is a guy named Ian Webster, a Google engineer.  He has got a blog where he writes a post this year in side projects for the end of the year.  I picked out a few interesting ones he has been working on, one is AMSAPI, an open source, he pumps out a few things and servers.  He runs an asteroid database, like a
community-driven asteroid database and picks out asteroids from pictures from the sky.  I don't understand it.  Apparently it was bought by an asteroid mining company, which apparently is a thing, which is weird.  It is a great example of doing something in a space you love.  Another interesting example is one he calls the most boring side project in the world but which I thought was a great example, it was an inflation calculator and it didn't take long to make.  One of Ian's tidbits is about the fact you need to swallow your pride and get stuff out there.  As a designer I share something I think a lot of developers have, which is you want something to be nice and finished before you put it out there.  I feel physically unwell when a design is not finished and not right.  And you just need to get past that.  It is great as a craftsperson but when you are getting interested in finishing and shipping, you want to be good at getting stuff out there and understand it is okay, you are going to have time to fix it up later and it will get better over time.
So maybe, great, I'm interested in startups or a passing interest.  Tell me more about the business. The first thing you want is an idea, if this was a startup talk, so periodically I do talks about
startups, so figure out the market size, the total size, the business model and a whole bunch of
crap, this is a side project, it doesn't matter.  You can pretty much ignore it all if you start doing a bunch of side projects you can start to pitch in start up conceptions on your side project but early on you need an idea.  It doesn't need to be a tech idea.  I read about Bemu, in Japan, a software programmer. He mails out Japanese candy, which is kind of cool if you have ever been to Japan. You know, going into a supermarket is like a cultural experience in and of itself, there is so much interesting stuff.  So he built a subscription and you get candy mailed to you.  There is some tech in it, it is not a tech project though, so don't limit yourself.  Stick with things you love, start with what you love.  Probably good startup advice generally when looking for ideas.  It is probably good life advice, actually. Do something in an area that you love.  If you are into cycling and
you are, "Man, I wish there was an app that let me share cycling tracks." Build it.  It doesn't need to be serious, do it for laughs.  Mario has been working on a kebab app, it is like a giant arrow and points to the nearest kebab, not sure what the tech is in there.  It is pretty cool.  Apparently it takes you to the kebab shop at the corner of his street at the moment but it is a work in progress. Start with what you love.  Look for those gaps.  So if you want to listen to that internal dialogue that is, "I wish that something existed to do something", and since it is a side project you don't need to get carried away, dial down the pressure, and "man, I wish there was a way to find

kebabs".  Awesome, great! Go make it.  You guys are developers and leaps ahead of the general population who want to do startups or side projects because you can make a kebab-finding app, that's possible, probably.  Wait to see the app.  Channel the frustration when you see another company doing something and you can do it better, channel that into an idea and put it out there. You know, a great way to think is that if you wanted something and you got it, then you've won, right.  For a startup, you want lots of people to want it and get it, but for a side project, you wanted it, you built it, you won.  You needed a kebab, it was Friday night, you built an app - presumably not on Friday night - you got your kebab, you have won.  Mario, whenever you are, you are a winner.  Make it small.  So one rule of thumb is cool, less than 10 hours to get it out. This is from Sasha Grief who does a lot of side projects, if the thinking is more than 10 hours, it is going to lead to procrastination and if you don't finish things it is one of the worst things to do. It is like Parkinson's law.  It fits in with the time you give it.  Choose a point in time and pick, it is going to be 10 hours.  That is going to drive a lot of constraints, you will be "what can I do in
10 hours?  I literally have 10 hours.  What is the value and the thing I can do which will get me out there?"  You want to focus down on that core value.  What is the one thing you can't not do? Mario's app cannot find kebabs, it won't be a kebab finder but it cannot have signups.  You don't need a signup thing.  There is the stuff when you make things on the periphery, like signup forms, you have built those thing as million times.  In a startup you think you will build all the things but it is a side project, it doesn't matter if you keep track of the users.  If you literally only have 10 hours to ship, you will be forced to think about what is the valuable thing I am trying to make here and it will force you to focus right down.  Remember, you can always add that stuff later.  This is a great startup skill as well, by the way. One of those skills you will get more and more practice at and it will drive the core value that is going to be in the startup one day. Remember, you've got nothing to lose in a side project, you're not banking your life's future on it and investing lots of money into it, you're not taking money from other people or quitting your job.  It is a side project.  If you literally put in 10 hours, what have you got to lose? You can be more reckless.  As you get more senior in your career it is typical to become more conservative, you've seen things go wrong.  No, man, we have to have that thing and that thing and that thing, because I've seen it when kebab-finding apps don't find the kebabs, it is bad.  You can become more conservative.  But take the awesome experience you have as a developer and marry with
that youthful experimentism you had when you were young.  You have nothing to lose.  But what if it sucks, Collis? What if I launch this thing and, man, everyone is laughing?  "This is the stupidest thing.  Didn't he know that Apple didn't just come out with a kebab app?  What was he
thinking?" We have the dialogue of "what if I'm embarrassed", but swallow it down.  Remember,
at the end of the day, most people won't remember.  Most people aren't interested.  I worked on so many side projects that sucked and weren't interesting.  I made a community for people who
played Quake, an awesome forum, nobody showed up.  It turns out there is more to building a
community than placing a forum then.  Then I made a photo shop Wiki and all the people will contribute and it will be like Wikipedia for photo shop, and the only ones who turned up was Spammers, and unless you wanted photos of Nigerian princes it was a useless site.  Nobody is aware I had the crappy side projects, they only remember the things that go well.  If you make something crap, join the club.  It doesn't matter.  Swallow your pride and know it is in the doing which is the important thing.  It is getting stuff out there.  Those things will teach you lessons. Later on I got to work on a company that built one of the largest communities around and it was from the early lessons and seeing this little thing for Quake didn't work out, probably because of this and this and this, and I got to apply it and it helped me make the startup better.  It is why you need to go to the gym before you start lifting huge weights.  You need to start small and build up. Launching, you want to get it out there, you swallowed your pride and ready to put it out there.
So people go "how do I do that?" It is not in my skillset.  As you do more projects you can work on it more and more.  But pick a channel, it could be your Twitter feed, your blog, email newsletter, whenever people can follow you, and keep at that channel delivering value and useful things around the space you're interested in.  If you are scratching your own itches and solving your own problems, chances are you will attract people with the same itches and they will follow you for value and possibly advise where to get some cream, you will attract more of the people.
If you continue delivering value and little side projects, talking about side projects, pushing updates, that's all you need to do.  How did you hear about BuildKite? You see him around the
traps and follow him on twitter.  You don't need to know how the stuff plays out and how it plays
out in full startup marketing because you're not trying to be there yet.  You are just getting started.  And that could be putting stuff out for the world to see, and the things that are going to get traction will spread and the other things no-one will remember.  Don't overthink marketing. If you have done some projects and they are going well, you will think of other things more
interesting.  But don't overthink it, generally, don't overthink the stuff.  You want to focus instead

of seeing it through.  I used to be kind of crap at seeing things through.  It is like one of those things you can practice.  It is a skill you can practice.  You can get better in life seeing things through.  It is easy to believe some people have willpower and some don't, some people are good at seeing things through and some aren't.  I don't think that is true.  There is not such a thing as people who are not able to see it through, there is only people who have chosen things that are too big for them to see through at that time.  If you walk out tomorrow and you want to try a marathon you will fall over, but if you start small and get used to the feeling, side projects 10 hours, and something later bigger and then collaborate with a designer and do marketing, you
slowly work up to it, you have got a better chance of succeeding and a lot more confidence to see it through.  Remember, the big things are going to happen incrementally, it is a common piece of
advice that is cliche.  The big things don't happen overnight, we know that.  But it takes
reinforcing, the people who have been successful in startups, or it applies to anything, they have started with small things and worked their way up.  They have practiced towards that.  It is not about talent either.  When I was young, I think it is a common misconception when you are young to think talent is important.  It is valuable and useful but it is not the be-all.  It is where you start on the race.  Maybe you have a lot of talent and start up front, but everyone runs the race, everyone has to run the race and to run the race you need guts and perseverance and determination.  That is the thing that will ultimately set you apart.  I have seen people who don't have that much talent make it far and those with much talent who haven't.  Maybe they shot too big too early and haven't got the stamina to see it through.  Start small, start with side projects, you need the crappy ones to get better.  I know a guy who started a side project, a cool tool but he misspelled it.  It was embarrassing.  So the next time he got a copywriter involved and it was something he needed to work on, people were commenting on it.  Maybe things you think aren't important.  The more startup muscle you build doing side projects the easier things will get.  As you start to try out different ideas you will find new ideas come to you easily, you will start spotting gaps.  It is intuitive.  Intuition is not something you are born with, you build it up with experience.  As you do more idea searching it will be more natural to you.  As you get better at seeing things through you will get better at seeing bigger things through.  The Internet is full of people telling you to do something.  At the end of the day, there is no formula, no magic trick, there is just doing it.  You are here at this Ruby conference, which will expose you to interesting people and ideas, it is a great time to be thinking about things, looking for ideas, being open to inspiration.  And my challenge to you while you are here for the two days is to look out for an
idea, choose an idea, commit to it and then focus on doing it rather than thinking about it.  Focus on getting out there, tell people and get it done.  If 10 hours is too big a constraint, choose five hours, if that is too big, choose two hours.  While I was making this presentation I thought I
would build a slack community and I can do that and extract code and write a blog post.  It is like the writers who will write one headline.  When they write one headline they'll write a sentence
and then a whole paragraph and a page.  You just need to start.  Choose an idea, get out there, do it and remember, great things happen when you are in the arena, not when you are watching from
the stands.  I am looking forward to the side projects from the conference and I hope you enjoy the rest of the conference.  Thank you very much.
